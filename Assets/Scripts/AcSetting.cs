using UnityEngine;
using System.Collections;

/// <summary>
/// ゲームの定数とかシーンをまたぐ変数をまとめておくクラスだよ
/// </summary>
public class AcSetting
{
	// ========================================================================== //
	// ========================================================================== //
	/*
	 * 定数
	 */
	// ========================================================================== //
	// ========================================================================== //

	// ========================================================================== //
	// ========================================================================== //

	/*
	 * 仮想画面サイズ
	 * 動的に GUI を出す時等に参照するよ
	 */
	public const int SCREEN_W = 480;
	public const int SCREEN_H = 800;

	// -------------------------------------------------------------------------- //
	// -------------------------------------------------------------------------- //

	// ========================================================================== //
	// ========================================================================== //

	/*
	 * ゲームモード
	 */
	public const int TIMEATTACK_MODE = 0;
	public const int CHALLENGE_MODE = 1;

	// -------------------------------------------------------------------------- //
	// -------------------------------------------------------------------------- //

	/*
	 * クリアすべきドアの数
	 */
	public const int TIMEATTACH_DOORS = 20;
	/*
	 * プレイ時間（フレーム数です）
	 */
	public const int CHALLENGE_TIME = 60 * 30;

	// ========================================================================== //
	// ========================================================================== //

	// ========================================================================== //
	// ========================================================================== //

	/// <summary>
	/// シングルトン
	/// </summary>
	private static AcSetting m_vInstance = new AcSetting();

	// -------------------------------------------------------------------------- //
	// -------------------------------------------------------------------------- //

	/// <summary>
	/// タイトル画面の表示チェックに使用してます
	/// </summary>
	private bool m_bBoot;

	/// <summary>
	/// タイムアタックモードかチェレンジモードか？
	/// </summary>
	private int m_vMode;

	// ========================================================================== //
	// ========================================================================== //

	// ========================================================================== //
	// ========================================================================== //

	/// <summary>
	/// デフォルトコンストラクタ
	/// </summary>
	private AcSetting()
	{
		m_bBoot = false;
		//
		m_vMode = TIMEATTACK_MODE;
	}

	// ========================================================================== //
	// ========================================================================== //

	// ========================================================================== //
	// ========================================================================== //

	public static void swBoot( bool bSw )
	{
		m_vInstance.m_bBoot = bSw;
	}

	public static bool isBoot()
	{
		return ( m_vInstance.m_bBoot );
	}

	// -------------------------------------------------------------------------- //
	// -------------------------------------------------------------------------- //

	public static void setMode( int vMode )
	{
		m_vInstance.m_vMode = vMode;
	}

	public static int getMode()
	{
		return ( m_vInstance.m_vMode );
	}

	// -------------------------------------------------------------------------- //
	// -------------------------------------------------------------------------- //

	public static int getFrameRate()
	{
		int _frameRate = Application.targetFrameRate;
		//
		if ( _frameRate < 0 )
		{
			_frameRate = 60;
		}
		//
		return ( _frameRate );
	}

	// ========================================================================== //
	// ========================================================================== //

	// ========================================================================== //
	// ========================================================================== //
}
